#!/bin/bash

# Funci√≥n para manejar errores
error_exit() {
    echo "‚ùå Error en la ejecuci√≥n del script en la l√≠nea $1: $2"
    exit 1
}

# Activar manejo de errores
trap 'error_exit $LINENO "$BASH_COMMAND"' ERR

echo "üîß Actualizando paquetes..."
sudo apt update

echo "üì¶ Instalando dependencias esenciales..."
sudo apt install -y git nodejs python3 perl curl wget ripgrep npm gcc make lua5.1 luarocks cargo python3-pip xclip

echo "üìú Instalando Tree-sitter CLI..."
sudo npm install -g tree-sitter-cli

echo "üõ†Ô∏è Instalando Stylua para formateo de c√≥digo..."
sudo cargo install stylua

echo "üî§ Agregando Cargo al PATH..."
echo 'export PATH="$HOME/.cargo/bin:$PATH"' >> ~/.bashrc
source ~/.bashrc

echo "üõ†Ô∏è Agregando el repositorio de Neovim e instal√°ndolo..."
sudo add-apt-repository -y ppa:neovim-ppa/unstable
sudo apt update && sudo apt install -y neovim

echo "üî† Instalando Nerd Font si no est√° presente..."
FONT_DIR="$HOME/.local/share/fonts"
FONT_FILE="$FONT_DIR/JetBrainsMono.zip"

mkdir -p "$FONT_DIR"
cd "$FONT_DIR"

if [ ! -f "$FONT_FILE" ]; then
    wget -O "$FONT_FILE" "https://github.com/ryanoasis/nerd-fonts/releases/latest/download/JetBrainsMono.zip"
    unzip -o "$FONT_FILE" -d "$FONT_DIR"
    fc-cache -fv
else
    echo "‚úÖ Nerd Fonts ya est√°n instaladas, omitiendo descarga."
fi

cd

echo "Removing previous NvChad installation..."
rm -rf ~/.config/nvim ~/.local/share/nvim ~/.cache/nvim
echo "Previous installation removed. Ready for fresh install!"

echo "üîΩ Instalando NvChad si no est√° presente..."
if [ ! -d "$HOME/.config/nvim" ]; then
    git clone https://github.com/NvChad/starter ~/.config/nvim
else
    echo "‚úÖ NvChad ya est√° instalado, omitiendo clonaci√≥n."
fi

echo "üöÄ Instalaci√≥n completa. Abre Neovim con 'nvim' para empezar!"
